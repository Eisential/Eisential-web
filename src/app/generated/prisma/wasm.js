
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  provider: 'provider',
  provider_account_id: 'provider_account_id',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  color: 'color',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  task_id: 'task_id',
  type: 'type',
  send_at: 'send_at',
  title: 'title',
  message: 'message',
  read: 'read',
  read_at: 'read_at',
  created_at: 'created_at'
};

exports.Prisma.Notification_delivery_logScalarFieldEnum = {
  id: 'id',
  notification_id: 'notification_id',
  subscription_id: 'subscription_id',
  delivery_channel: 'delivery_channel',
  status: 'status',
  error_message: 'error_message',
  sent_at: 'sent_at',
  delivered_at: 'delivered_at',
  clicked_at: 'clicked_at',
  created_at: 'created_at'
};

exports.Prisma.Push_subscriptionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  endpoint: 'endpoint',
  p256dh: 'p256dh',
  auth: 'auth',
  user_agent: 'user_agent',
  is_active: 'is_active',
  created_at: 'created_at',
  last_used_at: 'last_used_at'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  session_token: 'session_token',
  user_id: 'user_id',
  expires: 'expires',
  created_at: 'created_at'
};

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  due_date: 'due_date',
  quadrant: 'quadrant',
  position: 'position',
  completed: 'completed',
  completed_at: 'completed_at',
  user_id: 'user_id',
  category_id: 'category_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  email_verified: 'email_verified',
  image: 'image',
  notification_enabled: 'notification_enabled',
  notification_time_before: 'notification_time_before',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  account: 'account',
  category: 'category',
  notification: 'notification',
  notification_delivery_log: 'notification_delivery_log',
  push_subscription: 'push_subscription',
  session: 'session',
  task: 'task',
  user: 'user'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\ADMIN\\Eisential-web\\app\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\ADMIN\\Eisential-web\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../app/generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel account {\n  id                  String  @id @db.VarChar(36)\n  user_id             String? @db.VarChar(36)\n  type                String? @db.VarChar(50)\n  provider            String? @db.VarChar(50)\n  provider_account_id String? @unique @db.VarChar(255)\n  refresh_token       String?\n  access_token        String?\n  expires_at          Int?\n  token_type          String? @db.VarChar(50)\n  scope               String? @db.VarChar(255)\n  id_token            String?\n  session_state       String? @db.VarChar(255)\n  user                user?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel category {\n  id         String    @id @db.VarChar(36)\n  name       String    @db.VarChar(100)\n  color      String?   @default(\"#60B1F7\") @db.VarChar(7)\n  user_id    String?   @db.VarChar(36)\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  user       user?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  task       task[]\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel notification {\n  id                        String                      @id @db.VarChar(36)\n  task_id                   String?                     @db.VarChar(36)\n  type                      String?                     @db.VarChar(2)\n  send_at                   DateTime                    @db.Timestamp(6)\n  title                     String                      @db.VarChar(255)\n  message                   String\n  read                      Boolean?                    @default(false)\n  read_at                   DateTime?                   @db.Timestamp(6)\n  created_at                DateTime?                   @default(now()) @db.Timestamp(6)\n  task                      task?                       @relation(fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  notification_delivery_log notification_delivery_log[]\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel notification_delivery_log {\n  id                String             @id @db.VarChar(36)\n  notification_id   String?            @db.VarChar(36)\n  subscription_id   String?            @db.VarChar(36)\n  delivery_channel  String?            @db.VarChar(3)\n  status            String?            @db.VarChar(2)\n  error_message     String?\n  sent_at           DateTime?          @db.Timestamp(6)\n  delivered_at      DateTime?          @db.Timestamp(6)\n  clicked_at        DateTime?          @db.Timestamp(6)\n  created_at        DateTime?          @default(now()) @db.Timestamp(6)\n  notification      notification?      @relation(fields: [notification_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  push_subscription push_subscription? @relation(fields: [subscription_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel push_subscription {\n  id                        String                      @id @db.VarChar(36)\n  user_id                   String?                     @db.VarChar(36)\n  endpoint                  String                      @unique\n  p256dh                    String\n  auth                      String\n  user_agent                String?                     @db.VarChar(500)\n  is_active                 Boolean?                    @default(true)\n  created_at                DateTime?                   @default(now()) @db.Timestamp(6)\n  last_used_at              DateTime?                   @default(now()) @db.Timestamp(6)\n  notification_delivery_log notification_delivery_log[]\n  user                      user?                       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel session {\n  id            String    @id @db.VarChar(36)\n  session_token String?   @unique @db.VarChar(255)\n  user_id       String?   @db.VarChar(36)\n  expires       DateTime? @db.Timestamp(6)\n  created_at    DateTime? @default(now()) @db.Timestamp(6)\n  user          user?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel task {\n  id           String         @id @db.VarChar(36)\n  title        String         @db.VarChar(255)\n  description  String?\n  due_date     DateTime?      @db.Timestamp(6)\n  quadrant     String?        @default(\"B\") @db.VarChar(2)\n  position     Int?           @default(0)\n  completed    Boolean?       @default(false)\n  completed_at DateTime?      @db.Timestamp(6)\n  user_id      String?        @db.VarChar(36)\n  category_id  String?        @db.VarChar(36)\n  created_at   DateTime?      @default(now()) @db.Timestamp(6)\n  updated_at   DateTime?      @default(now()) @db.Timestamp(6)\n  notification notification[]\n  category     category?      @relation(fields: [category_id], references: [id], onUpdate: NoAction)\n  user         user?          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel user {\n  id                       String              @id @db.VarChar(36)\n  name                     String?             @db.VarChar(255)\n  email                    String              @unique @db.VarChar(255)\n  email_verified           DateTime?           @db.Timestamp(6)\n  image                    String?             @db.VarChar(500)\n  notification_enabled     Boolean?            @default(true)\n  notification_time_before Int?                @default(24)\n  created_at               DateTime?           @default(now()) @db.Timestamp(6)\n  updated_at               DateTime?           @default(now()) @db.Timestamp(6)\n  account                  account[]\n  category                 category[]\n  push_subscription        push_subscription[]\n  session                  session[]\n  task                     task[]\n}\n",
  "inlineSchemaHash": "33b5aabf30f0261ff2a026ad707c0ad7c143cc7518b54cd2249fa2b01ceca347",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_account_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"accountTouser\"}],\"dbName\":null},\"category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"categoryTouser\"},{\"name\":\"task\",\"kind\":\"object\",\"type\":\"task\",\"relationName\":\"categoryTotask\"}],\"dbName\":null},\"notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"task_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"send_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"read_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"task\",\"kind\":\"object\",\"type\":\"task\",\"relationName\":\"notificationTotask\"},{\"name\":\"notification_delivery_log\",\"kind\":\"object\",\"type\":\"notification_delivery_log\",\"relationName\":\"notificationTonotification_delivery_log\"}],\"dbName\":null},\"notification_delivery_log\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notification_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delivery_channel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"error_message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sent_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"delivered_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clicked_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"notificationTonotification_delivery_log\"},{\"name\":\"push_subscription\",\"kind\":\"object\",\"type\":\"push_subscription\",\"relationName\":\"notification_delivery_logTopush_subscription\"}],\"dbName\":null},\"push_subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"p256dh\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"auth\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_agent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"last_used_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notification_delivery_log\",\"kind\":\"object\",\"type\":\"notification_delivery_log\",\"relationName\":\"notification_delivery_logTopush_subscription\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"push_subscriptionTouser\"}],\"dbName\":null},\"session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"sessionTouser\"}],\"dbName\":null},\"task\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"due_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"quadrant\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notification\",\"kind\":\"object\",\"type\":\"notification\",\"relationName\":\"notificationTotask\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTotask\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"taskTouser\"}],\"dbName\":null},\"user\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email_verified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notification_enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"notification_time_before\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"account\",\"relationName\":\"accountTouser\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"category\",\"relationName\":\"categoryTouser\"},{\"name\":\"push_subscription\",\"kind\":\"object\",\"type\":\"push_subscription\",\"relationName\":\"push_subscriptionTouser\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"session\",\"relationName\":\"sessionTouser\"},{\"name\":\"task\",\"kind\":\"object\",\"type\":\"task\",\"relationName\":\"taskTouser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

